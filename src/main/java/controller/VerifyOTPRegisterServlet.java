package controller;

import dao.AccountDAO;
import dto.AccountDTO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;

import java.io.IOException;

@WebServlet(name = "VerifyOTPRegisterServlet", urlPatterns = {"/verify-otp-register"})
public class VerifyOTPRegisterServlet extends HttpServlet {

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        request.setCharacterEncoding("UTF-8");
        HttpSession session = request.getSession(false); // ‚ùó Kh√¥ng t·∫°o m·ªõi

        // ‚ùå Session ho·∫∑c d·ªØ li·ªáu kh√¥ng h·ª£p l·ªá
        if (session == null ||
            session.getAttribute("otp") == null ||
            session.getAttribute("pendingAccount") == null ||
            !"register".equals(session.getAttribute("otpPurpose"))) {

            request.setAttribute("error", "‚ö†Ô∏è Session expired or invalid. Please register again.");
            request.getRequestDispatcher("/WEB-INF/view/account/register.jsp").forward(request, response);
            return;
        }

        // ‚úÖ L·∫•y OTP v√† so s√°nh
        String enteredOtp = request.getParameter("otp");
        String sessionOtp = (String) session.getAttribute("otp");

        if (enteredOtp == null || !enteredOtp.equals(sessionOtp)) {
            request.setAttribute("error", "‚ùå Invalid OTP. Please try again.");
            request.getRequestDispatcher("/WEB-INF/view/account/verify-otp-register.jsp").forward(request, response);
            return;
        }

        try {
            // ‚úÖ OTP ƒë√∫ng ‚Üí ti·∫øn h√†nh t·∫°o t√†i kho·∫£n
            AccountDTO pendingAccount = (AccountDTO) session.getAttribute("pendingAccount");
            AccountDAO dao = new AccountDAO();

            boolean added = dao.addAccount(pendingAccount);

            if (added) {
                // üßπ D·ªçn session sau khi ƒëƒÉng k√Ω
                session.removeAttribute("otp");
                session.removeAttribute("otpPurpose");
                session.removeAttribute("pendingAccount");

                request.setAttribute("success", "üéâ Registration successful! You can now log in.");
                request.getRequestDispatcher("/WEB-INF/view/account/login.jsp").forward(request, response);
            } else {
                request.setAttribute("error", "‚ùå Failed to create account. Please try again.");
                request.getRequestDispatcher("/WEB-INF/view/account/verify-otp-register.jsp").forward(request, response);
            }

        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "‚ùå Server error: " + e.getMessage());
            request.getRequestDispatcher("/WEB-INF/view/account/verify-otp-register.jsp").forward(request, response);
        }
    }
}
