package controller;

import dao.AccountDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.*;
import util.SecurityUtil;

import java.io.IOException;

@WebServlet(name = "ResetPasswordServlet", urlPatterns = {"/reset-password"})
public class ResetPasswordServlet extends HttpServlet {

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        request.setCharacterEncoding("UTF-8");
        HttpSession session = request.getSession(false);

        // üîê Ki·ªÉm tra session h·ª£p l·ªá
        if (session == null ||
            session.getAttribute("resetUser") == null ||
            !Boolean.TRUE.equals(session.getAttribute("verifiedReset"))) {

            response.sendRedirect("forgot-password");
            return;
        }

        String username = (String) session.getAttribute("resetUser");
        String newPassword = request.getParameter("newPassword");
        String confirmPassword = request.getParameter("confirmPassword");

        // ‚ùå Ki·ªÉm tra m·∫≠t kh·∫©u h·ª£p l·ªá
        if (newPassword == null || confirmPassword == null || !newPassword.equals(confirmPassword)) {
            request.setAttribute("error", "‚ùå M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp ho·∫∑c b·ªã tr·ªëng.");
            request.getRequestDispatcher("/WEB-INF/view/account/resetPassword.jsp").forward(request, response);
            return;
        }

        // üîí Hash m·∫≠t kh·∫©u m·ªõi
        String hashedPassword = SecurityUtil.hashPassword(newPassword);

        AccountDAO dao = new AccountDAO();
        boolean updated = dao.updatePasswordByUsername(username, hashedPassword);

        if (updated) {
            dao.clearOTP(username); // üßπ Xo√° OTP trong DB

            // üßº X√≥a session t·∫°m
            session.removeAttribute("resetUser");
            session.removeAttribute("otp");
            session.removeAttribute("resetEmail");
            session.removeAttribute("otpPurpose");
            session.removeAttribute("verifiedReset");

            request.setAttribute("success", "üéâ ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng. Vui l√≤ng ƒëƒÉng nh·∫≠p.");
            request.getRequestDispatcher("/WEB-INF/view/account/login.jsp").forward(request, response);
        } else {
            request.setAttribute("error", "‚ùå ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.");
            request.getRequestDispatcher("/WEB-INF/view/account/resetPassword.jsp").forward(request, response);
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // üö´ Kh√¥ng cho truy c·∫≠p GET tr·ª±c ti·∫øp
        response.sendRedirect("forgot-password");
    }
}
